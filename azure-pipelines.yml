# YAML spec:
# https://aka.ms/yaml

name: '$(Date:yyyyMMdd)$(Rev:.r) (#$(BuildID)) $(TeamProject) ($(SourceBranchName))'

trigger:
  branches:
    include:
      - master
  tags:
    include:
      - '*'

pr:
- master

variables:
  NupkgArtifactName: 'PSKoans.nupkg'

stages:
- stage: UploadChangelog
  displayName: 'Upload Changelog'
  dependsOn: []
  condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/master')

  jobs:
  - job: GenerateChangelog
    displayName: "Generate Changelog"

    pool:
      vmImage: ubuntu-latest

    variables:
      FilePath: '$(System.DefaultWorkingDirectory)/Changelog.md'

    steps:
    - task: PowerShell@2
      displayName: 'Create Changelog'
      inputs:
        targetType: 'filepath'
        filePath: ./Build/New-Changelog.ps1
        arguments: -Path '$(FilePath)' -ApiKey $(GithubApiKey) -Verbose

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Changelog'
      inputs:
        path: '$(FilePath)'
        artifact: Changelog

- stage: Build
  displayName: 'Build PSKoans'
  dependsOn: []

  variables:
    FileSystemDeploymentPath: '$(System.DefaultWorkingDirectory)/Deploy/FileSystem'
    BuiltModulePath: '$(System.DefaultWorkingDirectory)/Deploy/PSKoans'

  jobs:
  - job: BuildNupkg
    displayName: 'Module Nupkg'

    pool:
      vmImage: ubuntu-latest

    steps:
    - template: templates/environment-setup.yml

    - task: PowerShell@2
      displayName: 'Stage PSKoans Module'

      inputs:
        targetType: 'filePath'
        filePath: ./Build/Build-Module.ps1

        errorActionPreference: 'stop'
        failOnStdErr: true
        pwsh: true

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Built Module Artifact'
      inputs:
        path: '$(BuiltModulePath)'
        artifact: PSKoans

    - template: ./templates/register-local-repo.yml
      parameters:
        repositoryPath: '$(FileSystemDeploymentPath)'

    - task: PowerShell@2
      displayName: 'Create Module Nupkg'
      inputs:
        targetType: 'filePath'
        filePath: ./Deploy/Publish.ps1
        arguments: -Key 'filesystem' -Path '$(FileSystemDeploymentPath)' -OutputDirectory '$(FileSystemDeploymentPath)'

        errorActionPreference: 'stop'
        failOnStderr: true
        pwsh: true

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Nupkg Artifact'
      inputs:
        path: '$(NupkgPath)'
        artifact: '$(NupkgArtifactName)'

- stage: LinuxTests
  displayName: 'Linux'
  dependsOn:
  - Build

  variables:
    PackageDownloadPath: '$(System.DefaultWorkingDirectory)/Module'
    PSRepositoryName: 'FileSystem'

  jobs:
  - job: Linux
    displayName: 'Pester Tests'

    pool:
      vmImage: ubuntu-latest

    steps:
    - template: templates/environment-setup.yml

    - template: ./templates/install-built-module.yml
      parameters:
        repositoryPath: '$(PackageDownloadPath)'
        repositoryName: '$(PSRepositoryName)'
        artifactName: '$(NupkgArtifactName)'

    - template: templates/test-steps.yml

- stage: WindowsTests
  displayName: 'Windows'
  dependsOn:
  - Build

  variables:
    PackageDownloadPath: '$(System.DefaultWorkingDirectory)/Module'
    PSRepositoryName: 'FileSystem'

  jobs:
  - job: Windows
    displayName: 'Pester Tests'

    pool:
      vmImage: windows-latest

    steps:
    - template: templates/environment-setup.yml

    - template: ./templates/install-built-module.yml
      parameters:
        repositoryPath: '$(PackageDownloadPath)'
        repositoryName: '$(PSRepositoryName)'
        artifactName: '$(NupkgArtifactName)'

    - template: templates/test-steps.yml

- stage: MacOSTests
  displayName: 'MacOS'
  dependsOn:
  - Build

  variables:
    PackageDownloadPath: '$(System.DefaultWorkingDirectory)/Module'
    PSRepositoryName: 'FileSystem'

  jobs:
  - job: MacOS
    displayName: 'Pester Tests'

    pool:
      vmImage: macOS-latest

    steps:
    - template: templates/environment-setup.yml

    - template: ./templates/install-built-module.yml
      parameters:
        repositoryPath: '$(PackageDownloadPath)'
        repositoryName: '$(PSRepositoryName)'
        artifactName: '$(NupkgArtifactName)'

    - template: templates/test-steps.yml

- stage: PublishModule
  displayName: 'Publish Module'
  dependsOn:
    - LinuxTests
    - WindowsTests
    - MacOSTests
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))

  jobs:
  - job: PublishToGallery
    displayName: 'PowerShell Gallery'

    pool:
      vmImage: ubuntu-latest

    variables:
      BuiltModulePath: '$(System.DefaultWorkingDirectory)/Deploy/PSKoans'
      GalleryDeploymentPath: '$(System.DefaultWorkingDirectory)/Deploy/PSGallery'

    steps:
    - template: templates/environment-setup.yml

    - task: DownloadPipelineArtifact@2
      displayName: 'Download Built Module Artifact'
      inputs:
        artifact: PSKoans
        path: $(BuiltModulePath)

    - task: PowerShell@2
      displayName: 'Publish Module to PSGallery'

      inputs:
        targetType: 'filePath'
        arguments: -Key $(PSApiKey) -Path '$(GalleryDeploymentPath)'
        filePath: ./Deploy/Publish.ps1

        errorActionPreference: 'stop'
        failOnStderr: true
        pwsh: true
